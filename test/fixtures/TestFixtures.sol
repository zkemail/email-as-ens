// SPDX-License-Identifier: MIT
pragma solidity ^0.8.29;

import { ProveAndClaimCommand } from "../../src/utils/Verifier.sol";

library TestFixtures {
    function getCase1() internal pure returns (ProveAndClaimCommand memory) {
        uint256[17] memory pubkey = [
            uint256(2107195391459410975264579855291297887),
            uint256(2562632063603354817278035230349645235),
            uint256(1868388447387859563289339873373526818),
            uint256(2159353473203648408714805618210333973),
            uint256(351789365378952303483249084740952389),
            uint256(659717315519250910761248850885776286),
            uint256(1321773785542335225811636767147612036),
            uint256(258646249156909342262859240016844424),
            uint256(644872192691135519287736182201377504),
            uint256(174898460680981733302111356557122107),
            uint256(1068744134187917319695255728151595132),
            uint256(1870792114609696396265442109963534232),
            uint256(8288818605536063568933922407756344),
            uint256(1446710439657393605686016190803199177),
            uint256(2256068140678002554491951090436701670),
            uint256(518946826903468667178458656376730744),
            uint256(3222036726675473160989497427257757)
        ];

        uint256[2] memory pA = [
            20888331054696098445606945549799161626823615582591148740779671056217073912228,
            984380168381528842280944629777675221677141166035897415391226995592930191653
        ];
        uint256[2][2] memory pB = [
            [
                3060263515482713323694380562319705383842381804415194592591798322590364742585,
                848855232225413411791392616764867132306661210526401022919110205998108879948
            ],
            [
                17520756712347438577665637729248066520825824644164786627490235197763053870579,
                18757306694312710148633096589556278814493019652852439484311900134038057678222
            ]
        ];
        uint256[2] memory pC = [
            16772734460455887897132027870106533301366566064790590768378437095535419637164,
            5813240226664314141787611707024720515353583762069698264261689727748096466051
        ];

        ProveAndClaimCommand memory command = ProveAndClaimCommand({
            domain: "gmail.com",
            email: "thezdev3@gmail.com",
            owner: 0xafBD210c60dD651892a61804A989eEF7bD63CBA0,
            dkimSignerHash: hex"0ea9c777dc7110e5a9e89b13f0cfc540e3845ba120b2b6dc24024d61488d4788",
            nullifier: hex"0A11F2664AE4F7E3A9C3BA43394B01347FD5B76FC0A7FDB09D91324DA1F6ADA4",
            timestamp: 0,
            accountSalt: hex"0E49D406A4D84DA7DB65C161EB11D06E8C52F1C0EDD91BC557E4F23FF01D7F66",
            isCodeEmbedded: false,
            miscellaneousData: abi.encode(pubkey),
            proof: abi.encode(pA, pB, pC)
        });

        return command;
    }
}